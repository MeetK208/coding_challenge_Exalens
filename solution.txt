blocks = [
{
    "gym": false,
    "school": true,
    "store": false,
},
{
    "gym": true,
    "school": false,
    "store": false,
},
{
    "gym": true,
    "school": true,
    "store": false,
},
{
    "gym": false,
    "school": true,
    "store": false,
},
{
"gym": false,
"school": true,
"store": true,
}
]
reqs = ["gym", "school", "store"]

function distancebetween(a, b) {
  return Math.abs(a - b);
}

function minValueIndex(A) {
  let minimum = Number.POSITIVE_INFINITY;
  let minIndex = 0;
  const n = A.length;

  for (let i = 0; i < n; i++) {
    if (minimum > A[i]) {
      minimum = A[i];
      minIndex = i;
    }
  }

  return minIndex;
}

function apartmentHunting(blocks, reqs) {
  const maxDistanceForEveryBlock = Array(blocks.length).fill(Number.NEGATIVE_INFINITY);

  for (let i = 0; i < blocks.length; i++) {
    for (const req of reqs) {
      let closestRequiredDistance = Number.POSITIVE_INFINITY;

      for (let j = 0; j < blocks.length; j++) {
        if (blocks[j][req]) {
          closestRequiredDistance = Math.min(closestRequiredDistance, distancebetween(i, j));
        }
      }

      maxDistanceForEveryBlock[i] = Math.max(maxDistanceForEveryBlock[i], closestRequiredDistance);
    }
  }

  return minValueIndex(maxDistanceForEveryBlock);
}

// Do not edit the line below.
exports.apartmentHunting = apartmentHunting;


console.log(apartmentHunting(blocks, reqs))

